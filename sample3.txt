
/*

A sequence of integers is beautiful if each element of this sequence is
divisible by 4.

You are given a sequence a1, a2, ..., an. In one step, you may choose any two
elements of this sequence, remove them from the sequence and append their sum
to the sequence. Compute the minimum number of steps necessary to make the given
sequence beautiful.

Input :
The first line of the input contains a single integer T denoting the number of
test cases. The description of T test cases follows.
The first line of each test case contains a single integer n.
The second line contains n space-separated integers a1, a2, ..., an.
        
Output :
For each test case, print a single line containing one number — the minimum
number of steps necessary to make the given sequence beautiful. If it's
impossible to make the sequence beautiful, print -1 instead.

Constraints :
1 ≤ T ≤ 10^5
1 ≤ n ≤ 10^5
1 ≤ sum of n over all test cases ≤ 10^6
0 ≤ ai ≤ 10^9

Example
Input:
1
7
1 2 3 1 2 3 8

Output:
3
        
 */

#include <bits/stdc++.h>
using namespace std;

int main() {
    int test;
    cin >> test;
    while (test--) {
        int arr[4] = {0};
        int n;
        long long int count = 0;
        long long int sum = 0;
        cin >> n;
        for (int i = 0; i < n; ++i) {
            int num;
            cin >> num;
            arr[num % 4]++;
            sum = sum + num;
        }
        if (sum % 4 != 0) {
            cout << -1 << endl;
        } else {
            count = min(arr[1], arr[3]);
            arr[1] -= count;
            arr[3] -= count;
            arr[2] += arr[1] / 2;
            arr[2] += arr[3] / 2;
            count += arr[1] / 2 + arr[2] / 2 + arr[3] / 2;
            cout << count << endl;
        }
    }
    return 0;
}